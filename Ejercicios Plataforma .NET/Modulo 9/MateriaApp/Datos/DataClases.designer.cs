#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.269
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Materia")]
	public partial class DataClasesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAlumno(Alumno instance);
    partial void UpdateAlumno(Alumno instance);
    partial void DeleteAlumno(Alumno instance);
    partial void InsertMateria(Materia instance);
    partial void UpdateMateria(Materia instance);
    partial void DeleteMateria(Materia instance);
    partial void InsertMatricula(Matricula instance);
    partial void UpdateMatricula(Matricula instance);
    partial void DeleteMatricula(Matricula instance);
    #endregion
		
		public DataClasesDataContext() : 
				base(global::Datos.Properties.Settings.Default.MateriaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alumno> Alumno
		{
			get
			{
				return this.GetTable<Alumno>();
			}
		}
		
		public System.Data.Linq.Table<Materia> Materia
		{
			get
			{
				return this.GetTable<Materia>();
			}
		}
		
		public System.Data.Linq.Table<Matricula> Matricula
		{
			get
			{
				return this.GetTable<Matricula>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alumno")]
	public partial class Alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Legajo;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private System.DateTime _FechaNacimiento;
		
		private EntitySet<Matricula> _Matricula;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLegajoChanging(string value);
    partial void OnLegajoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    #endregion
		
		public Alumno()
		{
			this._Matricula = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matricula), new Action<Matricula>(this.detach_Matricula));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Legajo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Legajo
		{
			get
			{
				return this._Legajo;
			}
			set
			{
				if ((this._Legajo != value))
				{
					this.OnLegajoChanging(value);
					this.SendPropertyChanging();
					this._Legajo = value;
					this.SendPropertyChanged("Legajo");
					this.OnLegajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Matricula", Storage="_Matricula", ThisKey="Legajo", OtherKey="Legajo")]
		public EntitySet<Matricula> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				this._Matricula.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materia")]
	public partial class Materia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodMateria;
		
		private string _Nombre;
		
		private string _PlanEstudio;
		
		private string _Departamento;
		
		private EntitySet<Matricula> _Matricula;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodMateriaChanging(string value);
    partial void OnCodMateriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPlanEstudioChanging(string value);
    partial void OnPlanEstudioChanged();
    partial void OnDepartamentoChanging(string value);
    partial void OnDepartamentoChanged();
    #endregion
		
		public Materia()
		{
			this._Matricula = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matricula), new Action<Matricula>(this.detach_Matricula));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMateria", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodMateria
		{
			get
			{
				return this._CodMateria;
			}
			set
			{
				if ((this._CodMateria != value))
				{
					this.OnCodMateriaChanging(value);
					this.SendPropertyChanging();
					this._CodMateria = value;
					this.SendPropertyChanged("CodMateria");
					this.OnCodMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanEstudio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PlanEstudio
		{
			get
			{
				return this._PlanEstudio;
			}
			set
			{
				if ((this._PlanEstudio != value))
				{
					this.OnPlanEstudioChanging(value);
					this.SendPropertyChanging();
					this._PlanEstudio = value;
					this.SendPropertyChanged("PlanEstudio");
					this.OnPlanEstudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departamento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Departamento
		{
			get
			{
				return this._Departamento;
			}
			set
			{
				if ((this._Departamento != value))
				{
					this.OnDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._Departamento = value;
					this.SendPropertyChanged("Departamento");
					this.OnDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_Matricula", Storage="_Matricula", ThisKey="CodMateria", OtherKey="CodMateria")]
		public EntitySet<Matricula> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				this._Matricula.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Materia = this;
		}
		
		private void detach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Materia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matricula")]
	public partial class Matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdMatricula;
		
		private string _CodMateria;
		
		private string _Legajo;
		
		private System.DateTime _FechaInscripcion;
		
		private string _Situacion;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Materia> _Materia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMatriculaChanging(string value);
    partial void OnIdMatriculaChanged();
    partial void OnCodMateriaChanging(string value);
    partial void OnCodMateriaChanged();
    partial void OnLegajoChanging(string value);
    partial void OnLegajoChanged();
    partial void OnFechaInscripcionChanging(System.DateTime value);
    partial void OnFechaInscripcionChanged();
    partial void OnSituacionChanging(string value);
    partial void OnSituacionChanged();
    #endregion
		
		public Matricula()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Materia = default(EntityRef<Materia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMatricula", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdMatricula
		{
			get
			{
				return this._IdMatricula;
			}
			set
			{
				if ((this._IdMatricula != value))
				{
					this.OnIdMatriculaChanging(value);
					this.SendPropertyChanging();
					this._IdMatricula = value;
					this.SendPropertyChanged("IdMatricula");
					this.OnIdMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMateria", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CodMateria
		{
			get
			{
				return this._CodMateria;
			}
			set
			{
				if ((this._CodMateria != value))
				{
					if (this._Materia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodMateriaChanging(value);
					this.SendPropertyChanging();
					this._CodMateria = value;
					this.SendPropertyChanged("CodMateria");
					this.OnCodMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Legajo", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Legajo
		{
			get
			{
				return this._Legajo;
			}
			set
			{
				if ((this._Legajo != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLegajoChanging(value);
					this.SendPropertyChanging();
					this._Legajo = value;
					this.SendPropertyChanged("Legajo");
					this.OnLegajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInscripcion", DbType="Date NOT NULL")]
		public System.DateTime FechaInscripcion
		{
			get
			{
				return this._FechaInscripcion;
			}
			set
			{
				if ((this._FechaInscripcion != value))
				{
					this.OnFechaInscripcionChanging(value);
					this.SendPropertyChanging();
					this._FechaInscripcion = value;
					this.SendPropertyChanged("FechaInscripcion");
					this.OnFechaInscripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situacion", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Situacion
		{
			get
			{
				return this._Situacion;
			}
			set
			{
				if ((this._Situacion != value))
				{
					this.OnSituacionChanging(value);
					this.SendPropertyChanging();
					this._Situacion = value;
					this.SendPropertyChanged("Situacion");
					this.OnSituacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Matricula", Storage="_Alumno", ThisKey="Legajo", OtherKey="Legajo", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Matricula.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Matricula.Add(this);
						this._Legajo = value.Legajo;
					}
					else
					{
						this._Legajo = default(string);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_Matricula", Storage="_Materia", ThisKey="CodMateria", OtherKey="CodMateria", IsForeignKey=true)]
		public Materia Materia
		{
			get
			{
				return this._Materia.Entity;
			}
			set
			{
				Materia previousValue = this._Materia.Entity;
				if (((previousValue != value) 
							|| (this._Materia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materia.Entity = null;
						previousValue.Matricula.Remove(this);
					}
					this._Materia.Entity = value;
					if ((value != null))
					{
						value.Matricula.Add(this);
						this._CodMateria = value.CodMateria;
					}
					else
					{
						this._CodMateria = default(string);
					}
					this.SendPropertyChanged("Materia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
